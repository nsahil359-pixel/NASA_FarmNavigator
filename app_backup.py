import streamlit as st
import requests
import pandas as pd

st.set_page_config(page_title="ЁЯМ╛ NASA Farm Navigator", layout="centered")

st.title("ЁЯМ╛ рдХрд┐рд╕рд╛рди рдореМрд╕рдо рд╕рд▓рд╛рд╣ (Farmer Weather Advisory)")

# Input
lat = st.number_input("Latitude (рдЕрдХреНрд╖рд╛рдВрд╢)", value=23.18, format="%.5f")
lon = st.number_input("Longitude (рджреЗрд╢рд╛рдВрддрд░)", value=79.95, format="%.5f")
days = st.slider("Days to fetch (рджрд┐рди)", 7, 30, 21)

if st.button("ЁЯФН Get Advisory"):
    # NASA POWER API
    url = (
        f"https://power.larc.nasa.gov/api/temporal/daily/point"
        f"?parameters=T2M,RH2M,WS2M,PRECTOTCORR"
        f"&community=AG"
        f"&longitude={lon}&latitude={lat}"
        f"&start=20250101&end=20250121&format=JSON"
    )

    res = requests.get(url).json()

    if "properties" in res:
        data = res["properties"]["parameter"]
        df = pd.DataFrame(data)
        st.subheader("ЁЯУК Weather Data")
        st.dataframe(df.head())

        # Advisory rules
        try:
            avg_temp = sum(data["T2M"].values()) / len(data["T2M"])
            avg_rain = sum(data["PRECTOTCORR"].values()) / len(data["PRECTOTCORR"])
        except Exception:
            avg_temp, avg_rain = None, None

        if avg_rain and avg_rain > 5:
            advice = "тЬЕ рд╣рд╛рд▓ рдХреА рд╡рд░реНрд╖рд╛ рдкрд░реНрдпрд╛рдкреНрдд рд╣реИ тАФ рдкрд╛рдиреА рдкрд╕рдВрдж рдХрд░рдиреЗ рд╡рд╛рд▓реА рдлрд╕рд▓реЗрдВ рдмреЛрдИ рдЬрд╛ рд╕рдХрддреА рд╣реИрдВред"
        else:
            advice = "тЪая╕П рд╡рд░реНрд╖рд╛ рдХрдо рд╣реИ тАФ рдЕрднреА рд╕реВрдЦрд╛ рд╕рд╣рдиреЗ рд╡рд╛рд▓реА рдлрд╕рд▓ рдмреЛрдПрдВред"

        st.subheader("ЁЯМ▒ Advisory (рд╕рд▓рд╛рд╣)")
        st.success(advice)

        # SMS & IVR preview
        st.subheader("ЁЯУй SMS Preview")
        st.text(f"Farm @ ({lat},{lon}) | Temp: {avg_temp:.1f}┬░C | Rain: {avg_rain:.1f}mm | Advice: {advice}")

        st.subheader("ЁЯУЮ IVR (Hindi)")
        st.audio("https://translate.google.com/translate_tts?ie=UTF-8&q=" + advice + "&tl=hi&client=tw-ob")

    else:
        st.error("тЪая╕П Could not fetch NASA POWER data.")
